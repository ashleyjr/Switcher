C51 COMPILER V9.56.0.0   INITDEVICE                                                        11/28/2016 21:11:59 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\Objects\InitDevice.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE InitDevice.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Inc) DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\InitDevice.lst) OBJECT(.\Objects\InitDevice.obj)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_C8051F850_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          
  17          //==============================================================================
  18          // enter_DefaultMode_from_RESET
  19          //==============================================================================
  20          extern void enter_DefaultMode_from_RESET(void) {
  21   1              // $[Config Calls]
  22   1              WDT_0_enter_DefaultMode_from_RESET();
  23   1              PORTS_1_enter_DefaultMode_from_RESET();
  24   1              PBCFG_0_enter_DefaultMode_from_RESET();
  25   1              TIMER01_0_enter_DefaultMode_from_RESET();
  26   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  27   1              // [Config Calls]$
  28   1      
  29   1      
  30   1      }
  31          
  32          
  33          //================================================================================
  34          // WDT_0_enter_DefaultMode_from_RESET
  35          //================================================================================
  36          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  37   1              // $[WDTCN - Watchdog Timer Control]
  38   1              //Disable Watchdog with key sequence
  39   1              WDTCN = 0xDE; //First key
  40   1              WDTCN = 0xAD; //Second key
  41   1              // [WDTCN - Watchdog Timer Control]$
  42   1      
  43   1      
  44   1      }
  45          
  46          //================================================================================
  47          // PORTS_1_enter_DefaultMode_from_RESET
  48          //================================================================================
  49          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
  50   1              // $[P1 - Port 1 Pin Latch]
  51   1              // [P1 - Port 1 Pin Latch]$
  52   1      
  53   1              // $[P1MDOUT - Port 1 Output Mode]
  54   1              /*
C51 COMPILER V9.56.0.0   INITDEVICE                                                        11/28/2016 21:11:59 PAGE 2   

  55   1              // B0 (Port 1 Bit 0 Output Mode) = PUSH_PULL (P1.0 output is push-pull.)
  56   1              // B1 (Port 1 Bit 1 Output Mode) = PUSH_PULL (P1.1 output is push-pull.)
  57   1              // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
  58   1              //     drain.)
  59   1              // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
  60   1              //     drain.)
  61   1              // B4 (Port 1 Bit 4 Output Mode) = OPEN_DRAIN (P1.4 output is open-
  62   1              //     drain.)
  63   1              // B5 (Port 1 Bit 5 Output Mode) = OPEN_DRAIN (P1.5 output is open-
  64   1              //     drain.)
  65   1              // B6 (Port 1 Bit 6 Output Mode) = OPEN_DRAIN (P1.6 output is open-
  66   1              //     drain.)
  67   1              // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
  68   1              //     drain.)
  69   1              */
  70   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL | P1MDOUT_B2__OPEN_DRAIN
  71   1                       | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
  72   1                       | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
  73   1              // [P1MDOUT - Port 1 Output Mode]$
  74   1      
  75   1              // $[P1MDIN - Port 1 Input Mode]
  76   1              // [P1MDIN - Port 1 Input Mode]$
  77   1      
  78   1              // $[P1SKIP - Port 1 Skip]
  79   1              // [P1SKIP - Port 1 Skip]$
  80   1      
  81   1              // $[P1MASK - Port 1 Mask]
  82   1              // [P1MASK - Port 1 Mask]$
  83   1      
  84   1              // $[P1MAT - Port 1 Match]
  85   1              // [P1MAT - Port 1 Match]$
  86   1      
  87   1      
  88   1      }
  89          
  90          //================================================================================
  91          // PBCFG_0_enter_DefaultMode_from_RESET
  92          //================================================================================
  93          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
  94   1              // $[XBR0 - Port I/O Crossbar 0]
  95   1              // [XBR0 - Port I/O Crossbar 0]$
  96   1      
  97   1              // $[XBR1 - Port I/O Crossbar 1]
  98   1              // [XBR1 - Port I/O Crossbar 1]$
  99   1      
 100   1              // $[XBR2 - Port I/O Crossbar 2]
 101   1              /*
 102   1              // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 103   1              //     Pullups enabled (except for Ports whose I/O are configured for analog
 104   1              //     mode).)
 105   1              // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 106   1              */
 107   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 108   1              // [XBR2 - Port I/O Crossbar 2]$
 109   1      
 110   1              // $[PRTDRV - Port Drive Strength]
 111   1              // [PRTDRV - Port Drive Strength]$
 112   1      
 113   1      
 114   1      }
 115          
 116          //================================================================================
C51 COMPILER V9.56.0.0   INITDEVICE                                                        11/28/2016 21:11:59 PAGE 3   

 117          // TIMER01_0_enter_DefaultMode_from_RESET
 118          //================================================================================
 119          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 120   1              // $[Timer Initialization]
 121   1              //Save Timer Configuration
 122   1              U8 TCON_save = TCON;
 123   1              //Stop Timers
 124   1              TCON &= TCON_TR0__BMASK & TCON_TR1__BMASK;
 125   1      
 126   1              // [Timer Initialization]$
 127   1      
 128   1              // $[TH0 - Timer 0 High Byte]
 129   1              // [TH0 - Timer 0 High Byte]$
 130   1      
 131   1              // $[TL0 - Timer 0 Low Byte]
 132   1              // [TL0 - Timer 0 Low Byte]$
 133   1      
 134   1              // $[TH1 - Timer 1 High Byte]
 135   1              // [TH1 - Timer 1 High Byte]$
 136   1      
 137   1              // $[TL1 - Timer 1 Low Byte]
 138   1              // [TL1 - Timer 1 Low Byte]$
 139   1      
 140   1              // $[Timer Restoration]
 141   1              //Restore Timer Configuration
 142   1              TCON = TCON_save;
 143   1      
 144   1              // [Timer Restoration]$
 145   1      
 146   1      
 147   1      }
 148          
 149          //================================================================================
 150          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 151          //================================================================================
 152          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 153   1              // $[CKCON - Clock Control]
 154   1              // [CKCON - Clock Control]$
 155   1      
 156   1              // $[TMOD - Timer 0/1 Mode]
 157   1              // [TMOD - Timer 0/1 Mode]$
 158   1      
 159   1              // $[TCON - Timer 0/1 Control]
 160   1              // [TCON - Timer 0/1 Control]$
 161   1      
 162   1      
 163   1      }
 164          
 165          
 166          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     39    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
